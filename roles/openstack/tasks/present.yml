---
# A generic role to create a accessable server
- name: verify authentication
  os_auth:

- name: import ssh keypair {{ OS_KEYPAIR_NAME }}
  os_keypair:
    name: "{{ OS_KEYPAIR_NAME }}"
    public_key_file: "{{ OS_PUBLIC_KEY_FILE }}"

- name: create network {{ OS_NETWORK_NAME }}
  os_network:
    name: "{{ OS_NETWORK_NAME }}"
  register: os_network_result

- name: set fact for OS_NETWORK_ID which may be used by packer
  set_fact:
    OS_NETWORK_ID: "{{os_network_result.network.id}}"

- name: create subnet {{ OS_SUBNET_NAME }} with cidr {{ OS_SUBNET_CIDR }}
  os_subnet:
    name: "{{ OS_SUBNET_NAME }}"
    network_name: "{{ OS_NETWORK_NAME }}"
    cidr: "{{ OS_SUBNET_CIDR }}"
    dns_nameservers: "{{ OS_NAMESERVERS }}"

- name: create public-net router {{ OS_ROUTER_NAME }}
  os_router:
    name: "{{ OS_ROUTER_NAME }}"
    network: public-net
    interfaces:
      - "{{ OS_SUBNET_NAME }}"
  when: OS_AUTO_FLOATING_IP

- name: include tasks to create security groups
  include_tasks: security_groups.yml
  vars:
    name: "{{item.key}}"
    rules: "{{item.value}}"
  with_dict: "{{security_groups}}"
  when: security_groups is defined
  tags:
    - security_groups

- name: create servers if required
  include_tasks: create_servers.yml
  when:
    - OS_SERVERS is defined
    - OS_SERVERS|length > 0
