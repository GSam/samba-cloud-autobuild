---
# A playbook to set up a samba server as AD DC
# ref: https://wiki.samba.org/index.php/Setting_up_Samba_as_an_Active_Directory_Domain_Controller

- name: disable resolvconf
  become: yes
  service:
    name: resolvconf
    enabled: no

- name: kill existing samba service and its friends
  become: yes
  shell: "killall --quiet --wait samba smbd nmdb winbindd || true"

- name: set fact for my_ip if openstack
  set_fact:
    my_ip: "{{openstack.private_v4}}"
  when:
    - openstack is defined
    - openstack.private_v4 is defined

- name: set fact for my_ip if not defined
  set_fact:
    my_ip: "{{ansible_host}}"
  when:
    - my_ip is not defined

- name: make sure /etc/hosts resolves DC's FQDN and short name to LAN IP
  become: yes
  lineinfile:
    path: "/etc/hosts"
    line: "{{my_ip}} {{ansible_hostname}}.{{samba_realm}} {{ansible_hostname}}"

- name: remove existing samba files from previous installation if any
  become: yes
  file:
    path: "{{ ansible_env[item] }}"
    state: absent
  when:
    - item in ansible_env
    - samba_purge
  with_items:
    - CONFIGFILE
    - LOCKDIR
    - STATEDIR
    - CACHEDIR
    - PRIVATE_DIR

- name: remove existing /etc/krb5.conf file
  become: yes
  file:
    path: "/etc/krb5.conf"
    state: absent

- name: include tasks/mit-krb5.yml if enabled
  include_tasks: tasks/mit-krb5.yml
  when: mit_krb5_enabled is defined and mit_krb5_enabled

# should already be done, just for safe
- name: config samba code
  command: "./configure.developer"
  args:
    chdir: "{{ repo_root }}"
  environment:
    CC: "ccache gcc"

# should already be done, just for safe
- name: compile samba code
  command: "make -j"
  args:
    chdir: "{{ repo_root }}"
  environment:
    CC: "ccache gcc"

- name: make install samba
  become: yes
  command: "make install"
  args:
    chdir: "{{ repo_root }}"

- name: Create a link to krb5.conf
  become: yes
  file:
    src: /usr/local/samba/private/krb5.conf
    dest: /etc/krb5.conf
    force: true
    state: link
    owner: root
    group: root

- name: set fact for primary_dc_ip if not defined
  set_fact:
    primary_dc_ip: "{{hostvars[primary_dc_name].openstack.private_v4}}"
  when: primary_dc_ip is not defined

- name: render /etc/resolv.conf
  become: yes
  copy:
    dest: /etc/resolv.conf
    content: |
      nameserver {{primary_dc_ip}}
      search {{samba_realm}}
  tags:
    - render-resolv-conf

- name: make sure supervisor service stopped before domain operations
  become: yes
  service:
    name: supervisor
    state: stopped

- name: set fact for is_primary_dc
  set_fact:
    is_primary_dc: no

- name: set fact for is_primary_dc
  set_fact:
    is_primary_dc: yes
  when:
    - 'primary_dc_name == ansible_hostname'

- name: copy samba backup file to remote primary dc if defined
  copy:
    src: "{{samba_backup_file}}"
    dest: "{{ansible_env.HOME}}/samba-backup"
  when:
    - is_primary_dc
    - 'samba_backup_file is defined'

- name: make sure samba restore target dir exists if defined
  become: yes
  file:
    state: directory
    path: "{{samba_restore_target_dir}}"
  when:
    - is_primary_dc
    - 'samba_restore_target_dir is defined'

- name: include tasks to run {{operation}}
  include_tasks: tasks/domain-operation.yml
  vars:
    operation: domain-provision
  when:
    - is_primary_dc
    - 'samba_backup_file is not defined'

- name: include tasks to run {{operation}}
  include_tasks: tasks/domain-operation.yml
  vars:
    operation: domain-restore
    samba_install_dir: "{{samba_restore_target_dir}}"
  when:
    - is_primary_dc
    - 'samba_backup_file is defined'
    - 'samba_restore_target_dir is defined'

- name: include tasks to run {{operation}}
  include_tasks: tasks/domain-operation.yml
  vars:
    operation: domain-join
  when:
    - not is_primary_dc
