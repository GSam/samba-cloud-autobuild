---
- name: win_ping
  win_ping:
  tags:
    - win_ping

- name: run win_updates (could take hours)
  win_updates:
    category_names:
      # - Application
      # - Connectors
      - CriticalUpdates
      # - DefinitionUpdates
      - DeveloperKits
      - FeaturePacks
      # - Guidance
      - SecurityUpdates
      - ServicePacks
      - Tools
      - UpdateRollups
      - Updates

  when: run_win_updates

- name: edit registry to show file extensions
  win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: HideFileExt
    type: dword
    data: 0
  tags:
    - show_file_ext

- name: edit registry to show hidden
  win_regedit:
    path: HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced
    name: Hidden
    type: dword
    data: 1
  tags:
    - show_hidden

- name: win_chocolatey install generic util packages
  win_chocolatey:
    name: "{{item}}"
  loop:
    - firefox
    - cmder
    - gow
    - notepadplusplus
    - winpcap
    - everything
    - wireshark
    - git
  tags:
    - win_chocolatey

- name: win_chocolatey install openssh
  win_chocolatey:
    name: "openssh"
    params: "'/SSHServerFeature'"
  tags:
    - win_chocolatey

- name: win_chocolatey install windows dev/test packages
  win_chocolatey:
    name: "{{item}}"
  loop:
    - vcredist-all
    - pswindowsupdate
    - dotnet4.7.1
    - wixtoolset
  tags:
    - win_chocolatey

- name: install features for windows-dc
  win_feature:
    name:
      - Net-Framework-Core
      - AD-Domain-Services
      - RSAT-AD-Tools
    include_sub_features: yes
    include_management_tools: yes
  tags:
    - win_feature

- name: download visutal studio 2017 community version
  win_get_url:
    url: https://aka.ms/vs/15/release/vs_community.exe
    dest: C:\vs_community.exe
  tags: install-visual-studio

- name: create cmd file to install vs_community.exe
  win_copy:
    content: |
      %1 --installPath "C:\\Program Files (x86)\Microsoft Visual Studio\2017\Community" ^
      --add Microsoft.VisualStudio.Workload.NativeDesktop ^
      --add Microsoft.VisualStudio.Workload.ManagedDesktop ^
      --add Microsoft.VisualStudio.Component.VC.Tools.x86.x64 ^
      --add Microsoft.Net.Component.4.7.1.TargetingPack ^
      --add Microsoft.Net.ComponentGroup.4.7.1.DeveloperTools ^
      --add Microsoft.VisualStudio.Component.Windows10SDK.16299.Desktop ^
      --add Microsoft.VisualStudio.Component.TestTools.Core ^
      --add Microsoft.Component.MSBuild ^
      --norestart --quiet --wait
    dest: C:\InstallVs2017Community.cmd
  tags: install-visual-studio

- name: run cmd script to install vs_community.exe
  win_command: .\InstallVs2017Community.cmd vs_community.exe
  args:
    chdir: C:\
  tags: install-visual-studio

- name: set dns if primary_dc_name defined
  block:

    - name: set fact for primary_dc_ip
      set_fact:
        primary_dc_ip: "{{hostvars[primary_dc_name].openstack.private_v4}}"

    - name: config the DNS client on Windows network adapters
      win_dns_client:
        adapter_names: "Ethernet"
        ipv4_addresses: ["{{primary_dc_ip}}", 202.78.247.199]

  when:
    - primary_dc_name is defined
    - 'primary_dc_name in hostvars'

- name: tasks for primary dc
  block:

    - name: ensure the named domain is reachable
      win_domain:
        dns_domain_name: "{{dns_domain_name}}"
        safe_mode_password: "{{ samba_password }}"
      register: win_domain_task

    - name: reboot host if required by win_domain
      win_reboot:
      when: win_domain_task.reboot_required

    - name: promote windows computer as domain controller
      win_domain_controller:
        dns_domain_name: "{{dns_domain_name}}"
        domain_admin_user: "{{ansible_user}}@{{dns_domain_name}}"
        domain_admin_password: "{{ samba_password }}"
        safe_mode_password: "{{ samba_password }}"
        state: domain_controller
        log_path: C:\ansible_win_domain_controller.txt
      register: win_domain_controller_task

    - name: reboot host if required by win_domain_controller
      win_reboot:
      when: win_domain_controller_task.reboot_required

  when:
    - '"windows-dc" in group_names'
    - 'primary_dc_name == ansible_hostname'

- name: tasks for backup dc
  block:

    - name: join windows computer to domain
      win_domain_membership:
        dns_domain_name: "{{dns_domain_name}}"
        domain_admin_user: "{{ansible_user}}@{{ samba_realm }}"
        domain_admin_password: "{{ samba_password }}"
        state: domain
      register: win_domain_membership_task

    - name: reboot host if required by win_domain_membership
      win_reboot:
      when: win_domain_membership_task.reboot_required

  when:
    - '"windows-dc" in group_names'
    - 'primary_dc_name != ansible_hostname'
  tags:
    - win_domain_membership
