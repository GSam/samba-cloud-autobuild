#!/bin/bash

machine=$1

if [[ "$machine" == "" ]]; then
   echo USAGE: ssh-to-cloud [machine]
   exit 1
fi

if [[ $SSH == '' ]]; then
    SSH=ssh
fi

id=$2

if [[ "$id" != "" ]]; then
    SSH="$SSH -i $id"
fi


KNOWN_HOSTS=~/.known-hosts-on-catalyst-cloud/$machine
CLOUD_DOT_FILES=~/cloud-dot-files

echo checking whether $machine has a floating IP...

#ip=$(openstack server list | grep "| $machine " | cut -d'|' -f5 | cut -d, -f2 -s | tr -d '[:space:]' )
ip=$(openstack server show ${machine} -c addresses -f value | tr -c -d '[0-9].,' | cut -d ',' -f 2 -s )

if [[ "$ip" ]]; then
    echo found IP $ip
else
    for x in 1 2; do
        echo looking for a free IP
        ip=$(openstack  floating ip list -c 'Floating IP Address' -c'Port' -f value | \
                 grep -e None | cut -d' ' -f 1 |head -n 1 )
        if [[ "$ip" ]]; then
            echo using $ip
            break
        else
            echo no free floating IPs; creating a new one...
            openstack floating ip create
        fi
    done

    #port=$(openstack port list --server "$machine" -c ID -f value)
    #openstack floating ip set --port $port $ip
    openstack server add floating ip $machine $ip
    rm -f $KNOW_HOSTS
fi

image=$(openstack server show $machine -c image -f value)


if [[ "$image" =~ centos ]]; then
    user=centos
elif [[ "$image" =~ debian ]]; then
    user=debian
else
    user=ubuntu
fi

echo found image $image: using username $user

# make sure $ip has no trailing space (or else rsync $ip: will fail)
ip=${ip// }

# copy the dot files if this looks like the first connection

if [[ -d $CLOUD_DOT_FILES && ! -f $KNOWN_HOSTS ]]; then
    mkdir -p $(dirname $KNOWN_HOSTS)
    echo "copying $CLOUD_DOT_FILES/ contents to remote $ip:"
    rsync -v -e "$SSH -o 'UserKnownHostsFile $KNOWN_HOSTS' -o 'User $user'" -r "$CLOUD_DOT_FILES/" "$ip":
fi

$SSH -o "UserKnownHostsFile $KNOWN_HOSTS" -o "User $user" $ip



# for windows machines:
#xfreerdp -v $ip -u 'SAMDOM\Administrator' -clipboard
