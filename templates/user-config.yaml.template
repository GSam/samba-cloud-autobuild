#cloud-config

apt_mirror: http://ubuntu.catalyst.net.nz/ubuntu
apt_mirror_search:
  - http://ubuntu.catalyst.net.nz/ubuntu
locale: en_NZ.UTF-8

{package_list}

package_upgrade: true

# Be careful modifying this next bit that writes the script
# /usr/local/bin/clone-samba -- the image we're starting with has
# probably already run this.

write_files:
 - content: |
    #!/bin/bash
    set -x
    set -e
    cd ~
    git clone git://git.catalyst.net.nz/samba.git
    cd samba
    git remote add catalyst git://git.catalyst.net.nz/samba.git
    git remote add abartlet git://git.samba.org/abartlet/samba.git
    git remote set-url origin git://git.samba.org/samba.git
    git fetch catalyst
   path: /usr/local/bin/clone-samba
   permissions: '0755'
 - content: |
    #!/bin/bash
    set -x
    set -e
    export AUTOBUILD=/home/{user}/autobuild/
    rm -rf $AUTOBUILD/*
    mkdir -p $AUTOBUILD
    [ "{tmpfs}" == "True" ] && mount -t tmpfs -o size=75% tmpfs $AUTOBUILD
    chown {user}  $AUTOBUILD
   path: /usr/local/bin/prepare-autobuild-dir
   permissions: '0755'
 - content: |
    #!/bin/bash
    set -x
    set -e
    [ {skip_samba_build} == "True" ] && exit 0
    cd ~
    cd samba
    git remote rm our_repo && echo "removed old remote"
    git remote add our_repo {remote}
    git fetch our_repo
    git checkout our_repo/{branch}
    export SMBD_MAXTIME={maxtime}
    export AUTOBUILD_NO_FAIL_IMMEDIATELY={dont_fail_immediately}
    CC="ccache gcc" ./script/autobuild.py --email-from=samba-dev@catalyst.net.nz \
                          --email=samba-dev@catalyst.net.nz \
                          --email-server=smtp1.catalyst.net.nz \
                          --always-email --attach-logs \
                          --nocleanup --testbase=$HOME/autobuild --tail \
                          {verbose}
    /usr/local/bin/delete-host
   path: /usr/local/bin/build-samba
   permissions: '0755'
 - content: |
    #!/bin/bash
    export OS_AUTH_URL="{OS_AUTH_URL}"
    export OS_TENANT_ID="{OS_TENANT_ID}"
    export OS_TENANT_NAME="{OS_TENANT_NAME}"
    export OS_USERNAME="{OS_USERNAME}"
    export OS_PASSWORD="{OS_PASSWORD}"
    export OS_REGION_NAME="{OS_REGION_NAME}"
    if [ -z "$OS_REGION_NAME" ]; then unset OS_REGION_NAME; fi
    sync
    nova shelve $(hostname)
   path: /usr/local/bin/shelve-host
   permissions: '0755'
 - content: |
    #!/bin/bash
    export OS_AUTH_URL="{OS_AUTH_URL}"
    export OS_TENANT_ID="{OS_TENANT_ID}"
    export OS_TENANT_NAME="{OS_TENANT_NAME}"
    export OS_USERNAME="{OS_USERNAME}"
    export OS_PASSWORD="{OS_PASSWORD}"
    export OS_REGION_NAME="{OS_REGION_NAME}"
    if [ -z "$OS_REGION_NAME" ]; then unset OS_REGION_NAME; fi
    sync
    nova suspend $(hostname)
   path: /usr/local/bin/suspend-host
   permissions: '0755'
 - content: |
    #!/bin/bash
    export OS_AUTH_URL="{OS_AUTH_URL}"
    export OS_TENANT_ID="{OS_TENANT_ID}"
    export OS_TENANT_NAME="{OS_TENANT_NAME}"
    export OS_USERNAME="{OS_USERNAME}"
    export OS_PASSWORD="{OS_PASSWORD}"
    export OS_REGION_NAME="{OS_REGION_NAME}"
    if [ -z "$OS_REGION_NAME" ]; then unset OS_REGION_NAME; fi
    nova delete $(hostname)
   path: /usr/local/bin/delete-host
   permissions: '0755'
 - content: |
    #!/bin/bash
    echo "We failed! doing nothing"
   path: /usr/local/bin/continue-host
   permissions: '0755'
 - content: |
    #!/bin/bash
    sleep 5d
    /usr/local/bin/delete-host
   path: /usr/local/bin/delayed-delete-host
   permissions: '0755'

# If the build succeeds, it deletes the host at the end of build-samba.  Otherwise, we run delete-host or shelve-host depending on what the caller wanted
runcmd:
 - set -x
 - echo 0 > /proc/sys/kernel/yama/ptrace_scope
 - mount / -o remount,rw,nobarrier
 - [ blockdev, --setra, {readahead}, /dev/vda]
 - [ /usr/local/bin/prepare-autobuild-dir]
 - [ su, {user}, -l, -c, /usr/local/bin/clone-samba]
 - [ su, {user}, -l, -c, /usr/local/bin/build-samba]
 - [ su, {user}, -l, -c, /usr/local/bin/{onfail}-host]
